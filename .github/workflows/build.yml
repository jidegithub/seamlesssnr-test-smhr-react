name: Compose

on: 
  push:
    branches: [ main ]

jobs:
  # job1:
    # jest:
    #   if: github.event_name == 'pull_request'
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v2
    #     - name: install modules
    #       run: npm ci
    #     - name: run tests
    #       run: npm test

    build:

      name: build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Set Up Node.js
          uses: actions/setup-node@v2
          with:
            node-version: 16

        - name: Install Dependencies
          run: npm install
        
        - name: Run Unit Tests
          run: npm test

        - name: Build Application
          run: npm run build

    staging:

      name: staging
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Deploy to Staging
          run: |
            # Add your deployment script/commands here
            echo "deploy stage"
            echo $github.token
            echo $github.TOKEN

    production:

      name: production
      runs-on: ubuntu-latest
      needs: staging
      steps:
        - uses: trstringer/manual-approval@v1
          with:
            secret: ${{ github.token }}
            approvers: jidegithub
            minimum-approvals: 1
            issue-title: 'Manual Approval'
        # - name: Checkout Repository
        #   uses: actions/checkout@v2

        # - name: Deploy to Production
        #   run: |
        #     # Add your deployment script/commands here
        #     echo "production stage"

    # manual_approval:
    #   on-success:
    #     runs-on: ubuntu-latest
    #     if: ${{ github.event.workflow_run.conclusion == 'success' }}

    #     steps:
    #       - name: Request Manual Approval
    #         uses: actions/github-script@v5
    #         with:
    #           script: |
    #             const { data } = await github.pulls.list({
    #               owner: context.repo.owner,
    #               repo: context.repo.repo,
    #               state: 'open'
    #             });

    #             if (data.length === 0) {
    #               console.log('No open pull requests.');
    #               return;
    #             }

    #             const pullRequestNumber = data[0].number;
    #             await github.pulls.createReview({
    #               owner: context.repo.owner,
    #               repo: context.repo.repo,
    #               pull_number: pullRequestNumber,
    #               event: 'APPROVE'
    #             });
    #   on-failure:
    #     runs-on: ubuntu-latest
    #     if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    #     steps:
    #       - run: echo 'The triggering workflow failed'
